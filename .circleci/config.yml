version: 2.1
parameters:
  cmds:
    type: string
    default: "ssl-auto-recorder ssl-log-player"

jobs:
  test_go:
    resource_class: medium
    docker:
      - image: cimg/go:1.20.2
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: go get -v -t -d ./...
      - run: go test -v -covermode=count -coverprofile=count.out ./...
      - run: go tool cover -html=count.out -o coverage.html
      - store_artifacts:
          path: coverage.html
          destination: coverage

  build_docker:
    resource_class: small
    docker:
      - image: cimg/base:2023.04
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run: |
          for cmd in << pipeline.parameters.cmds >>; do
            docker build -f ./cmd/${cmd}/Dockerfile -t robocupssl/${cmd}:latest .
          done

  publish_docker:
    resource_class: small
    docker:
      - image: cimg/base:2023.04
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run: |
          # Parse version from tag (removing 'v' prefix)
          TAG=${CIRCLE_TAG:1}
          TAG=${TAG:-latest}
          for cmd in << pipeline.parameters.cmds >>; do
            docker build -f ./cmd/${cmd}/Dockerfile -t robocupssl/${cmd}:${TAG} .
            docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_PASSWORD}"
            docker push robocupssl/${cmd}:${TAG}
          done

  release:
    docker:
      - image: cimg/go:1.18
    steps:
      - checkout
      - run: curl -sfL https://goreleaser.com/static/run | bash

workflows:
  version: 2
  build:
    jobs:
      - test_go
  release:
    jobs:
      - release:
          context: github
          filters: { branches: { ignore: /.*/ }, tags: { only: /^v.*/ } }
  docker:
    jobs:
      - build_docker
      - publish_docker:
          context: docker hub
          filters: { branches: { only: master }, tags: { only: /^v.*/ } }
