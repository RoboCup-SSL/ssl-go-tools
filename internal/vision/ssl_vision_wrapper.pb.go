// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vision/ssl_vision_wrapper.proto

package vision

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SSL_WrapperPacket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Detection     *SSL_DetectionFrame    `protobuf:"bytes,1,opt,name=detection" json:"detection,omitempty"`
	Geometry      *SSL_GeometryData      `protobuf:"bytes,2,opt,name=geometry" json:"geometry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSL_WrapperPacket) Reset() {
	*x = SSL_WrapperPacket{}
	mi := &file_vision_ssl_vision_wrapper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSL_WrapperPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSL_WrapperPacket) ProtoMessage() {}

func (x *SSL_WrapperPacket) ProtoReflect() protoreflect.Message {
	mi := &file_vision_ssl_vision_wrapper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSL_WrapperPacket.ProtoReflect.Descriptor instead.
func (*SSL_WrapperPacket) Descriptor() ([]byte, []int) {
	return file_vision_ssl_vision_wrapper_proto_rawDescGZIP(), []int{0}
}

func (x *SSL_WrapperPacket) GetDetection() *SSL_DetectionFrame {
	if x != nil {
		return x.Detection
	}
	return nil
}

func (x *SSL_WrapperPacket) GetGeometry() *SSL_GeometryData {
	if x != nil {
		return x.Geometry
	}
	return nil
}

var File_vision_ssl_vision_wrapper_proto protoreflect.FileDescriptor

const file_vision_ssl_vision_wrapper_proto_rawDesc = "" +
	"\n" +
	"\x1fvision/ssl_vision_wrapper.proto\x1a!vision/ssl_vision_detection.proto\x1a vision/ssl_vision_geometry.proto\"u\n" +
	"\x11SSL_WrapperPacket\x121\n" +
	"\tdetection\x18\x01 \x01(\v2\x13.SSL_DetectionFrameR\tdetection\x12-\n" +
	"\bgeometry\x18\x02 \x01(\v2\x11.SSL_GeometryDataR\bgeometryBNB\x15SslVisionWrapperProtoP\x01Z3github.com/RoboCup-SSL/ssl-go-tools/internal/vision"

var (
	file_vision_ssl_vision_wrapper_proto_rawDescOnce sync.Once
	file_vision_ssl_vision_wrapper_proto_rawDescData []byte
)

func file_vision_ssl_vision_wrapper_proto_rawDescGZIP() []byte {
	file_vision_ssl_vision_wrapper_proto_rawDescOnce.Do(func() {
		file_vision_ssl_vision_wrapper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vision_ssl_vision_wrapper_proto_rawDesc), len(file_vision_ssl_vision_wrapper_proto_rawDesc)))
	})
	return file_vision_ssl_vision_wrapper_proto_rawDescData
}

var file_vision_ssl_vision_wrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_vision_ssl_vision_wrapper_proto_goTypes = []any{
	(*SSL_WrapperPacket)(nil),  // 0: SSL_WrapperPacket
	(*SSL_DetectionFrame)(nil), // 1: SSL_DetectionFrame
	(*SSL_GeometryData)(nil),   // 2: SSL_GeometryData
}
var file_vision_ssl_vision_wrapper_proto_depIdxs = []int32{
	1, // 0: SSL_WrapperPacket.detection:type_name -> SSL_DetectionFrame
	2, // 1: SSL_WrapperPacket.geometry:type_name -> SSL_GeometryData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_vision_ssl_vision_wrapper_proto_init() }
func file_vision_ssl_vision_wrapper_proto_init() {
	if File_vision_ssl_vision_wrapper_proto != nil {
		return
	}
	file_vision_ssl_vision_detection_proto_init()
	file_vision_ssl_vision_geometry_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vision_ssl_vision_wrapper_proto_rawDesc), len(file_vision_ssl_vision_wrapper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vision_ssl_vision_wrapper_proto_goTypes,
		DependencyIndexes: file_vision_ssl_vision_wrapper_proto_depIdxs,
		MessageInfos:      file_vision_ssl_vision_wrapper_proto_msgTypes,
	}.Build()
	File_vision_ssl_vision_wrapper_proto = out.File
	file_vision_ssl_vision_wrapper_proto_goTypes = nil
	file_vision_ssl_vision_wrapper_proto_depIdxs = nil
}
