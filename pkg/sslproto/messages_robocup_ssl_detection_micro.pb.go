// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages_robocup_ssl_detection_micro.proto

package sslproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SSL_Micro_DetectionBall struct {
	X                    *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSL_Micro_DetectionBall) Reset()         { *m = SSL_Micro_DetectionBall{} }
func (m *SSL_Micro_DetectionBall) String() string { return proto.CompactTextString(m) }
func (*SSL_Micro_DetectionBall) ProtoMessage()    {}
func (*SSL_Micro_DetectionBall) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_robocup_ssl_detection_micro_0b685b019a877c52, []int{0}
}
func (m *SSL_Micro_DetectionBall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSL_Micro_DetectionBall.Unmarshal(m, b)
}
func (m *SSL_Micro_DetectionBall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSL_Micro_DetectionBall.Marshal(b, m, deterministic)
}
func (dst *SSL_Micro_DetectionBall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSL_Micro_DetectionBall.Merge(dst, src)
}
func (m *SSL_Micro_DetectionBall) XXX_Size() int {
	return xxx_messageInfo_SSL_Micro_DetectionBall.Size(m)
}
func (m *SSL_Micro_DetectionBall) XXX_DiscardUnknown() {
	xxx_messageInfo_SSL_Micro_DetectionBall.DiscardUnknown(m)
}

var xxx_messageInfo_SSL_Micro_DetectionBall proto.InternalMessageInfo

func (m *SSL_Micro_DetectionBall) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *SSL_Micro_DetectionBall) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type SSL_Micro_DetectionRobot struct {
	RobotId              *uint32  `protobuf:"varint,1,opt,name=robot_id,json=robotId" json:"robot_id,omitempty"`
	X                    *float32 `protobuf:"fixed32,2,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,3,req,name=y" json:"y,omitempty"`
	Orientation          *float32 `protobuf:"fixed32,4,opt,name=orientation" json:"orientation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSL_Micro_DetectionRobot) Reset()         { *m = SSL_Micro_DetectionRobot{} }
func (m *SSL_Micro_DetectionRobot) String() string { return proto.CompactTextString(m) }
func (*SSL_Micro_DetectionRobot) ProtoMessage()    {}
func (*SSL_Micro_DetectionRobot) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_robocup_ssl_detection_micro_0b685b019a877c52, []int{1}
}
func (m *SSL_Micro_DetectionRobot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSL_Micro_DetectionRobot.Unmarshal(m, b)
}
func (m *SSL_Micro_DetectionRobot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSL_Micro_DetectionRobot.Marshal(b, m, deterministic)
}
func (dst *SSL_Micro_DetectionRobot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSL_Micro_DetectionRobot.Merge(dst, src)
}
func (m *SSL_Micro_DetectionRobot) XXX_Size() int {
	return xxx_messageInfo_SSL_Micro_DetectionRobot.Size(m)
}
func (m *SSL_Micro_DetectionRobot) XXX_DiscardUnknown() {
	xxx_messageInfo_SSL_Micro_DetectionRobot.DiscardUnknown(m)
}

var xxx_messageInfo_SSL_Micro_DetectionRobot proto.InternalMessageInfo

func (m *SSL_Micro_DetectionRobot) GetRobotId() uint32 {
	if m != nil && m.RobotId != nil {
		return *m.RobotId
	}
	return 0
}

func (m *SSL_Micro_DetectionRobot) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *SSL_Micro_DetectionRobot) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *SSL_Micro_DetectionRobot) GetOrientation() float32 {
	if m != nil && m.Orientation != nil {
		return *m.Orientation
	}
	return 0
}

type SSL_Micro_DetectionFrame struct {
	Balls                []*SSL_Micro_DetectionBall  `protobuf:"bytes,5,rep,name=balls" json:"balls,omitempty"`
	RobotsYellow         []*SSL_Micro_DetectionRobot `protobuf:"bytes,6,rep,name=robots_yellow,json=robotsYellow" json:"robots_yellow,omitempty"`
	RobotsBlue           []*SSL_Micro_DetectionRobot `protobuf:"bytes,7,rep,name=robots_blue,json=robotsBlue" json:"robots_blue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SSL_Micro_DetectionFrame) Reset()         { *m = SSL_Micro_DetectionFrame{} }
func (m *SSL_Micro_DetectionFrame) String() string { return proto.CompactTextString(m) }
func (*SSL_Micro_DetectionFrame) ProtoMessage()    {}
func (*SSL_Micro_DetectionFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_robocup_ssl_detection_micro_0b685b019a877c52, []int{2}
}
func (m *SSL_Micro_DetectionFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSL_Micro_DetectionFrame.Unmarshal(m, b)
}
func (m *SSL_Micro_DetectionFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSL_Micro_DetectionFrame.Marshal(b, m, deterministic)
}
func (dst *SSL_Micro_DetectionFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSL_Micro_DetectionFrame.Merge(dst, src)
}
func (m *SSL_Micro_DetectionFrame) XXX_Size() int {
	return xxx_messageInfo_SSL_Micro_DetectionFrame.Size(m)
}
func (m *SSL_Micro_DetectionFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SSL_Micro_DetectionFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SSL_Micro_DetectionFrame proto.InternalMessageInfo

func (m *SSL_Micro_DetectionFrame) GetBalls() []*SSL_Micro_DetectionBall {
	if m != nil {
		return m.Balls
	}
	return nil
}

func (m *SSL_Micro_DetectionFrame) GetRobotsYellow() []*SSL_Micro_DetectionRobot {
	if m != nil {
		return m.RobotsYellow
	}
	return nil
}

func (m *SSL_Micro_DetectionFrame) GetRobotsBlue() []*SSL_Micro_DetectionRobot {
	if m != nil {
		return m.RobotsBlue
	}
	return nil
}

func init() {
	proto.RegisterType((*SSL_Micro_DetectionBall)(nil), "SSL_Micro_DetectionBall")
	proto.RegisterType((*SSL_Micro_DetectionRobot)(nil), "SSL_Micro_DetectionRobot")
	proto.RegisterType((*SSL_Micro_DetectionFrame)(nil), "SSL_Micro_DetectionFrame")
}

func init() {
	proto.RegisterFile("messages_robocup_ssl_detection_micro.proto", fileDescriptor_messages_robocup_ssl_detection_micro_0b685b019a877c52)
}

var fileDescriptor_messages_robocup_ssl_detection_micro_0b685b019a877c52 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8f, 0xb1, 0x6a, 0xc3, 0x30,
	0x10, 0x86, 0x91, 0xd2, 0x34, 0xe5, 0x9c, 0x2c, 0x5a, 0xaa, 0x6c, 0xc2, 0x93, 0xe9, 0xe0, 0xa1,
	0xd0, 0xa5, 0x43, 0x87, 0x50, 0x0a, 0x85, 0x76, 0x51, 0xa6, 0x4e, 0x42, 0xb6, 0x45, 0x31, 0x9c,
	0x73, 0x41, 0x92, 0x69, 0xfc, 0x82, 0x7d, 0xae, 0x62, 0x2b, 0x85, 0x16, 0x12, 0x32, 0xfe, 0xc7,
	0xf7, 0x7f, 0x77, 0x07, 0x77, 0x9d, 0x0b, 0xc1, 0x7e, 0xba, 0x60, 0x3c, 0x55, 0x54, 0xf7, 0x7b,
	0x13, 0x02, 0x9a, 0xc6, 0x45, 0x57, 0xc7, 0x96, 0x76, 0xa6, 0x6b, 0x6b, 0x4f, 0xe5, 0xde, 0x53,
	0xa4, 0xfc, 0x01, 0x6e, 0xb7, 0xdb, 0x37, 0xf3, 0x3e, 0x8e, 0xcc, 0xf3, 0x2f, 0xb2, 0xb1, 0x88,
	0x62, 0x09, 0xec, 0x20, 0x99, 0xe2, 0x05, 0xd7, 0xec, 0x30, 0xa6, 0x41, 0xf2, 0x94, 0x86, 0x3c,
	0x80, 0x3c, 0x51, 0xd3, 0x54, 0x51, 0x14, 0x6b, 0xb8, 0x19, 0xf7, 0x46, 0xd3, 0x36, 0x92, 0x29,
	0x56, 0xac, 0xf4, 0x62, 0xca, 0xaf, 0x4d, 0x52, 0xf2, 0x7f, 0xca, 0xd9, 0x51, 0x29, 0x14, 0x64,
	0xe4, 0x5b, 0xb7, 0x8b, 0x76, 0x54, 0xc9, 0x2b, 0xc5, 0x0a, 0xae, 0xff, 0x8e, 0xf2, 0x6f, 0x76,
	0x72, 0xeb, 0x8b, 0xb7, 0x9d, 0x13, 0x25, 0xcc, 0x2b, 0x8b, 0x18, 0xe4, 0x5c, 0xcd, 0x8a, 0xec,
	0x5e, 0x96, 0x67, 0xde, 0xd2, 0x09, 0x13, 0x4f, 0xb0, 0x9a, 0xae, 0x0a, 0x66, 0x70, 0x88, 0xf4,
	0x25, 0xaf, 0xa7, 0xde, 0xba, 0x3c, 0xf7, 0x97, 0x5e, 0x26, 0xfe, 0x63, 0xc2, 0xc5, 0x23, 0x64,
	0xc7, 0x7e, 0x85, 0xbd, 0x93, 0x8b, 0x4b, 0x6d, 0x48, 0xf4, 0x06, 0x7b, 0xf7, 0x13, 0x00, 0x00,
	0xff, 0xff, 0xa1, 0xe3, 0x5b, 0x32, 0xa1, 0x01, 0x00, 0x00,
}
